#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_UniformBlock
{
    float4x4 rendermatrix;
};

struct type_UniformBlock_1
{
    float4 vec[8];
};

struct main0_out
{
    float4 out_var_TEXCOORD0 [[user(locn0)]];
    float4 gl_Position [[position]];
};

vertex main0_out main0(constant type_UniformBlock& UniformBlock [[buffer(0)]], constant type_UniformBlock_1& UniformBlock_1 [[buffer(1)]], uint gl_VertexIndex [[vertex_id]])
{
    main0_out out = {};
    uint _38 = gl_VertexIndex / 2u;
    float4 _51;
    if (_38 == 0u)
    {
        _51 = float4(1.0, 0.0, 1.0, 1.0);
    }
    else
    {
        float4 _50;
        if (_38 == 1u)
        {
            _50 = float4(0.0, 1.0, 0.0, 1.0);
        }
        else
        {
            _50 = select(float4(1.0, 0.0, 0.0, 1.0), float4(0.0, 0.0, 1.0, 1.0), bool4(_38 == 2u));
        }
        _51 = _50;
    }
    float4 _70;
    if ((gl_VertexIndex % 2u) == 0u)
    {
        _70 = float4(UniformBlock_1.vec[_38].xyz, 1.0);
    }
    else
    {
        _70 = float4(UniformBlock_1.vec[_38 + 1u].xyz, 1.0);
    }
    out.gl_Position = UniformBlock.rendermatrix * _70;
    out.out_var_TEXCOORD0 = _51;
    return out;
}

