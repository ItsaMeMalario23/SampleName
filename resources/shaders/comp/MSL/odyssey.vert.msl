#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_UniformBlock
{
    float4x4 rendermatrix;
};

struct type_UniformBlock_1
{
    float4x4 modeltransform;
};

struct main0_out
{
    float2 out_var_TEXCOORD0 [[user(locn0)]];
    float4 gl_Position [[position]];
};

struct main0_in
{
    float3 in_var_TEXCOORD0 [[attribute(0)]];
    uint in_var_TEXCOORD1 [[attribute(1)]];
};

vertex main0_out main0(main0_in in [[stage_in]], constant type_UniformBlock& UniformBlock [[buffer(0)]], constant type_UniformBlock_1& UniformBlock_1 [[buffer(1)]])
{
    main0_out out = {};
    float2 _63;
    if (in.in_var_TEXCOORD1 == 0u)
    {
        _63 = float2(0.0, 1.0);
    }
    else
    {
        float2 _62;
        if (in.in_var_TEXCOORD1 == 1u)
        {
            _62 = float2(1.0);
        }
        else
        {
            _62 = select(float2(0.0), float2(1.0, 0.0), bool2(in.in_var_TEXCOORD1 == 2u));
        }
        _63 = _62;
    }
    out.gl_Position = UniformBlock.rendermatrix * (UniformBlock_1.modeltransform * float4(in.in_var_TEXCOORD0, 1.0));
    out.out_var_TEXCOORD0 = _63;
    return out;
}

