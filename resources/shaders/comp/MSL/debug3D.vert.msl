#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_UniformBlock
{
    float4x4 rendermatrix;
};

struct type_UniformBlock_1
{
    float4x4 modeltransform;
};

struct main0_out
{
    float4 out_var_TEXCOORD0 [[user(locn0)]];
    float4 gl_Position [[position]];
};

vertex main0_out main0(constant type_UniformBlock& UniformBlock [[buffer(0)]], constant type_UniformBlock_1& UniformBlock_1 [[buffer(1)]], uint gl_VertexIndex [[vertex_id]])
{
    main0_out out = {};
    bool _46;
    if (!(gl_VertexIndex == 0u))
    {
        _46 = gl_VertexIndex == 1u;
    }
    else
    {
        _46 = true;
    }
    float4 _59;
    float4 _60;
    if (_46)
    {
        _59 = float4(1.0, 0.0, 0.0, 1.0);
        _60 = float4(2.0, 0.0, 0.0, 1.0);
    }
    else
    {
        bool _55;
        if (!(gl_VertexIndex == 2u))
        {
            _55 = gl_VertexIndex == 3u;
        }
        else
        {
            _55 = true;
        }
        bool4 _56 = bool4(_55);
        _59 = select(float4(0.0, 0.0, 1.0, 1.0), float4(0.0, 1.0, 0.0, 1.0), _56);
        _60 = select(float4(0.0, 0.0, 2.0, 1.0), float4(0.0, 2.0, 0.0, 1.0), _56);
    }
    float4 _72;
    if ((gl_VertexIndex % 2u) == 0u)
    {
        _72 = UniformBlock_1.modeltransform * float4(0.0, 0.0, 0.0, 1.0);
    }
    else
    {
        _72 = UniformBlock_1.modeltransform * _60;
    }
    out.gl_Position = UniformBlock.rendermatrix * _72;
    out.out_var_TEXCOORD0 = _59;
    return out;
}

